#+LATEX_CLASS: article
#+LATEX_CLASS_OPTIONS:
#+LATEX_HEADER:
#+LATEX_HEADER_EXTRA:
#+DESCRIPTION:
#+KEYWORDS:
#+SUBTITLE:
#+LATEX_COMPILER: pdflatex
#+DATE: [2019-01-03 Чт 11:43]
#+STARTUP: hidestars latexpreview content 

* vim

  [[https://habr.com/company/mailru/blog/340740/][Статья по полезным плагинам для vim]]
  
  [[https://vimawesome.com/][Список самых vim плагинов]]
  
** Отображения текста
   :LOGBOOK:
   CLOCK: [2019-01-03 Чт 20:09]--[2019-01-03 Чт 20:10] =>  0:01
   :END:

   1. [X] Нумерация строк по умолчанию

      #+BEGIN_SRC shell :tangle ~/.vimrc
        set number
      #+END_SRC
** Плагины

*** Пакетные менеджеры
**** pathogen.vim
     :LOGBOOK:
     CLOCK: [2019-01-03 Чт 20:11]--[2019-01-03 Чт 20:12] =>  0:01
     CLOCK: [2019-01-03 Чт 11:46]--[2019-01-03 Чт 18:33] =>  6:47
     :END:

     Менеджер автоматической загрузки плагинов, расположенных по адресу ~/.vim/bundle

     1. Установка
        Скачанный из [[https://github.com/tpope/vim-pathogen][репозитория]] файл pathogen.vim отправляем в папку ~/.vim/autoload
     2. В конфигурационном файле указываем
        
        #+BEGIN_SRC shell :tangle ~/.vimrc
        execute pathogen#infect()
        syntax on
        filetype plugin indent on
        #+END_SRC


     Теперь любой плагин в директории ~/.vim/bundle будет загружать автоматически. 
**** COMMENT vimplug
     :LOGBOOK:
     CLOCK: [2019-01-03 Чт 20:59]
     :END:

     В смысле гибкости настроек кмк уступает патогену. Ergo отключаю.
     [[https://github.com/junegunn/vim-plug][Гитхаб расширения]].

     Устанавливается копированием фалйа plug.vim в директорию ~/.vim/autoload

     Указание директории с плагинами
     #+BEGIN_SRC shell :tangle ~/.vimrc
       call plug#begin('~/.vim/plugged')
     #+END_SRC

     Установка fzf
     
     #+BEGIN_SRC shell :tangle ~/.vimrc
       Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
       Plug 'junegunn/fzf.vim'
     #+END_SRC

     Завершение вызова vimPlug

     #+BEGIN_SRC shell :tangle ~/.vimrc 
       call plug#end()
     #+END_SRC

     
*** vim powerline
    :LOGBOOK:
    CLOCK: [2019-01-02 Ср 18:53]--[2019-01-02 Ср 18:55] =>  0:02
    :END:

    1. Установка
       Устанавливается с помощью pip

       #+BEGIN_SRC shell
         pip install --user git+git://github.com/powerline/powerline
       #+END_SRC

    2. Чтобы посмотреть место расположения пакета необходимо

       #+BEGIN_SRC shell
         pip show powerline-status
       #+END_SRC

       #+RESULTS:
       | Name:         | powerline-status                                            |              |                   |          |
       | Version:      | 2.7.dev9999-git.b-5d82d544f3366a214732aeb8f781d50ced38ceef- |              |                   |          |
       | Summary:      | The                                                         | ultimate     | statusline/prompt | utility. |
       | Home-page:    | https://github.com/powerline/powerline                      |              |                   |          |
       | Author:       | Kim                                                         | Silkebaekken |                   |          |
       | Author-email: | kim.silkebaekken+vim@gmail.com                              |              |                   |          |
       | License:      | MIT                                                         |              |                   |          |
       | Location:     | /home/ludwig/.local/lib64/python3.6/site-packages           |              |                   |          |
       | Requires:     |                                                             |              |                   |          |
       | Required-by:  |                                                             |              |                   |          |

    3. Для vim подключение происходит добавлением следующих строк в конфигруационный файл

       #+BEGIN_SRC shell :tangle ~/.vimrc 
       set rtp+=/home/ludwig/.local/lib64/python3.6/site-packages/powerline/bindings/vim
       set laststatus=2
       set t_Co=256
       #+END_SRC


**** DONE Включение поддержки python vim'ом
     CLOSED: [2019-01-02 Ср 19:29]

     - CLOSING NOTE [2019-01-02 Ср 19:29] \\
       Достаточно собрать vim с флагом python
     SCHEDULED: <2019-01-02 Ср>

     После установки powerline по иструкции, запуск vim из терминала встретил сообщением
     
     #+BEGIN_SRC shell
       You need vim compiled with Python 2.6, 2.7 or 3.2 and later support
       for Powerline to work. Please consult the documentation for more
       details.
       Нажмите ENTER или введите команду для продолжения
     #+END_SRC

     Оказалось, что vim был собран без флага python

     #+BEGIN_SRC shell
       app-editors/vim-8.1.0648::gentoo  USE="X acl nls -cscope -debug -gpm -lua -luajit -minimal -perl -python -racket -ruby (-selinux) -tcl -terminal -vim-pager"
     #+END_SRC

     Добавление флага python исправляет ситуацию.
*** NERDTree
    :LOGBOOK:
    CLOCK: [2019-01-03 Чт 20:12]--[2019-01-03 Чт 20:23] =>  0:11
    :END:

    | Ключ | Описание                          |
    |------+-----------------------------------|
    | I    | показывать/скрывать скрытые файлы |
    |------+-----------------------------------|
    | ?    | показать/скрыть помощь            |
    |      |                                   |
    Плагин для навигации по файлам ввиде древовидной структуры.
    Устанавливал с помощью pathogen
    #+BEGIN_SRC shell
      tree ~/.vim/bundle/nerdtree
    #+END_SRC


    Единственная конфигруционная строчка файла связывает клавишу f9 с открытием панели nerdtree.

    #+BEGIN_SRC shell :tangle ~/.vimrc    
      map <F9> :NERDTreeToggle<CR>
    #+END_SRC
*** fzf
    :LOGBOOK:
    CLOCK: [2019-01-04 Пт 20:18]
    :END:

    Фьюзи файендер. Может использоваться в vim следующим образом

    #+BEGIN_SRC shell
      vim $(fzf)
    #+END_SRC

    #+RESULTS:


    Однако, лучше его использовать как плагин

    #+BEGIN_SRC shell :tangle ~/.vimrc
      set rtp+=~/.fzf
    #+END_SRC
    
